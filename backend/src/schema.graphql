# import * from './generated/prisma.graphql'

type User {
  id: ID!
  name: String!
  email: String!
  password: String!
  emailConfirmed: Boolean
  permissions: [Permission]
}

type MessageCode {
  code: Int
}

type ValueCount {
  value: String!
  count: Int!
}

type Query {
  car(where: CarWhereUniqueInput!): Car
  cars(
    where: CarWhereInput
    orderBy: CarOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [Car]!
  post(where: PostWhereUniqueInput!): Post
  posts(
    where: PostWhereInput
    orderBy: PostOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [Post]!
  postsConnection(
    where: PostWhereInput
    orderBy: PostOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): PostConnection!
  thisUser: User
  resetTokenValid(resetToken: String!): MessageCode
  modelsOfBrand(brand: Brand!): [String]
  availableModelsOfBrand(brand: Brand!): [ValueCount]
  availableBrands: [ValueCount]
}

type Mutation {
  createPost(data: PostCreateInput!): Post!
  signUp(
    email: String!
    password: String!
    repeatedPassword: String!
    name: String!
  ): User!
  repeatEmailWithConfirmationToken(email: String!): MessageCode
  signIn(email: String!, password: String!, rememberMe: Boolean): User!
  confirmEmail(emailConfirmationToken: String!): MessageCode
  signOut: MessageCode
  requestPasswordReset(email: String!): MessageCode
  resetPassword(
    password: String!
    repeatedPassword: String!
    resetToken: String!
  ): User!
}
